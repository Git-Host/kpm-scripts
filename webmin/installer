#!/usr/bin/env fish
function main
# ## Config
set -l PROG_NAME    "Webmin"
set -l REQ_STORAGE  158984
set -l USERNAME     $USER
set -l DEBIAN       "webmin_1.730_all.deb"



# ## Check Requirements
# ### Already installed?
if test -e /usr/share/webmin
  echo "
A previous $PROG_NAME installation is detected. To access it,
visit the following url:

    $USERNAME.koding.io:10000

And login with the following information:

    User: $USERNAME
    Pass: The password you gave during installation
"
  echo "Req Error: Already installed" >&2
  exit 84
end
# ### User not root
if test "$USERNAME" = "root"
  echo "
$PROG_NAME should not be installed from the root user. Please switch
to your normal Koding user, and try this command again.
"
  echo "Req Error: Not logged in as user" >&2
  exit 84
end
# ### Storage
set -l available_storage (df / | awk 'NR>1{print $4}')
if test (math $available_storage - $REQ_STORAGE) -lt 0
  set -l hReq (math $REQ_STORAGE / 1024)
  set -l hAvl (math $available_storage / 1024)
  echo "
$PROG_NAME requires at least $hReq""MB storage, \
and you have $hAvl""MB free.

Please free up some space, and try again. You can start by deleting any
large files or directories in your home directory or delete software that
you do not need.

You can also upgrade your account to get more space, at the following url:

    https://koding.com/Pricing

Please refer to the following guide for tips on how to free up VM storage:

    http://learn.koding.com/guides/freeing-up-space
"
  echo "Req Error: Not enough storage" >&2
  exit 84
end



# ## Prompt for password
echo "
$PROG_NAME requires a user account password. This will be both your
password for '$USERNAME', as well as your $PROG_NAME Password.
Please enter this below.
"
stty -echo < /dev/tty
for x in (seq 3)
  echo -n "Password: "
  if not read password < /dev/tty
    stty echo < /dev/tty
    echo "Aborting after empty password" >&2
    exit 1
  end
  if test -n $password
    break
  else if test $x -eq 3
    echo -e "\nAborting after 3 empty inputs."
    stty echo < /dev/tty
    echo "Aborting after 3 password attempts" >&2
    exit 1
  else
    echo -e "\nYou must enter a password. Please retry."
  end
end
stty echo < /dev/tty
echo ""



# ## Set user password
echo "$USERNAME:$password" | sudo chpasswd
or begin
  set -l err $status
  echo "Error: Unable to set user password."
  echo "Error: Unable to set user password." >&2
  exit $err
end



# ## Update
# This message is here due to a pause on apt-get update that might
# confuse the user. A vague message will help them know that it isn't
# froze.
echo -e "\nUpdating.."
sudo apt-get update
or begin
  set -l err $status
  echo "Error: Failed to update package list"
  echo "Error: apt-get update failed" >&2
  exit $err
end



# ## Install dependencies
sudo apt-get install -y \
  libnet-ssleay-perl libauthen-pam-perl libio-pty-perl apt-show-versions
or begin
  set -l err $status
  echo "Error: Failure installing $PROG_NAME dependencies"
  echo "Error: apt-get failed to install dependencies" >&2
  exit $err
end



# ## Download
curl -L -o "/tmp/$DEBIAN" \
  "http://prdownloads.sourceforge.net/webadmin/$DEBIAN"
or begin
  set -l err $status
  echo "Error: Failed to download $PROG_NAME"
  echo "Error: Downloading binary from sourceforge.net failed" >&2
  exit $err
end



# ## Install Deb
sudo dpkg -i "/tmp/$DEBIAN"
or begin
  set -l err $status
  echo "Error: Failed to install $PROG_NAME"
  echo "Error: dpki -i failed" >&2
  exit $err
end



# ## Configure
# We're using grep to fail on a lack of pattern match. If the expected
# string is missing, grep will fail, which is good.
sudo grep "ssl=1" /etc/webmin/miniserv.conf > /dev/null
and sudo sed -i -e "s/ssl=1/ssl=0/g" /etc/webmin/miniserv.conf
or begin
  set -l err $status
  echo "Error: Failed to configure Webmin"
  echo "Error: /etc/webmin/miniserv.conf was missing the string `ssl=1`" >&2
  exit $err
end



# ## Reboot after configure
sudo service webmin restart
or begin
  set -l err $status
  echo "Error: Webmin failed to restart"
  echo "Error: Webmin failed to restart" >&2
  exit $err
end




# ## Cleanup temp file
sudo rm "/tmp/$DEBIAN"
or begin
  set -l err $status
  echo "Warning: Failed to cleanup temp file"
  echo "Warning: Failed to cleanup Deb file in temp dir" >&2
  # Don't exit for warnings
end



# ## Success
echo "
$PROG_NAME installation complete. To access it, visit the following url:

    $USERNAME.koding.io:10000

And login with the following information:

    User: $USERNAME
    Pass: The password you just supplied
"
end
main
# vim: set filetype=fish:

