#!/usr/bin/env bash
#
# # Koding Package Manager Installer
#
# ## **Important**
#
# This installer is used directly by curls, as well as within KPM,
# so it needs to handle both nicely. This means that it should **NOT**
# print to STDERR as any curl users will see the STDERR prints.
#
function main() {
# ## Config
PROG_NAME="Koding Package Manager"
USERNAME=$USER
TMPLOC="/tmp/kpm_installer"
BINLOC="/usr/local/bin/kpm"
TAG="v0.3.1"
# Allow for the KPM_VER value to override the default tag
if [ ! -z "$KPM_VER" ]; then
  TAG="$KPM_VER"
fi


# ## Get the os
# Examples:
# - linux
# - darwin
# - windows.. not applicable in bash, though cygwin might be interesting
platform=`uname | tr '[:upper:]' '[:lower:]'`
case "$platform" in
  linux|darwin|windows)
    ;;
  *)
    cat << EOF
Error 84: Unknown platform.
EOF
  exit 84
  ;;
esac


# Set the download urls, based on the (possibly overwritten) tag and os
SUMURL="https://github.com/koding/kpm-scripts/releases/download/$TAG/$platform-checksum"
BINURL="https://github.com/koding/kpm-scripts/releases/download/$TAG/$platform-kpm"


# ## Inform the user about sudo permissions
cat << EOF

$PROG_NAME is being installed. Please provide your sudo password if
prompted.

EOF


# ## Download bin
sudo mkdir -p "$TMPLOC" \
&& sudo curl -sSL -o "$TMPLOC/kpm" "$BINURL"
err=$?; if [ "$err" -ne 0 ]; then
  echo "Error $err: Failed to download $PROG_NAME Version '$TAG'"
  exit $err
fi



# ## Download expected checksum
sudo curl -sSL -o "$TMPLOC/checksum" "$SUMURL"
err=$?; if [ "$err" -ne 0 ]; then
  echo "Error $err: Failed to download $PROG_NAME Checksum '$TAG'"
  exit $err
fi
expectedSum=`cat "$TMPLOC/checksum"`



# ## Calculate binary sum
downloadedSum=""
case "$platform" in
  linux)
    downloadedSum=`md5sum "$TMPLOC/kpm" | awk '{print $1}'`
    ;;
  darwin)
    downloadedSum=`md5 -q $TMPLOC/kpm`
    ;;
esac



# ## Compare the checksum
if [ ! -z "$expectedSum" ] && [ ! -z "$downloadedSum" ]; then
  # Sum success
  # We got the sum, compare the two
  if [ "$downloadedSum" != "$expectedSum" ]; then
    echo "Error: kpm binary checksums did not match"
    # Disabling exit for testing
    exit 2
  fi
else
  cat << EOF
Warning: Unable to compare checksums. KPM binary may not be correct.
EOF
fi



# ## Set perms
sudo chmod +x "$TMPLOC/kpm"
err=$?; if [ "$err" -ne 0 ]; then
  echo "Error $err: Failed to set $PROG_NAME permissions"
  exit $err
fi



# ## Move kpm to the bin loc
sudo mv "$TMPLOC/kpm" "$BINLOC"
err=$?; if [ "$err" -ne 0 ]; then
  echo "Error $err: Failed to move $PROG_NAME to $BINLOC"
  exit $err
fi



# ## Cleanup
sudo rm "$TMPLOC/checksum"



# ## Success
downloadedVer=`kpm --version | awk '{print $2}'`
echo "
$PROG_NAME $downloadedVer installation is complete. For help,
run the following command:

    \$ kpm --help
"
}
main
# vim: set filetype=sh:
