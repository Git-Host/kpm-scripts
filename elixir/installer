#!/usr/bin/env fish
function main
# ## Config
set -l PROG_NAME    "Elixir"
set -l REQ_STORAGE  4444
set -l USERNAME     $USER
set -l DEBIAN       "jenkins_1.598_all.deb"




# ## Check Requirements
# ### Already installed?
if which elixir > /dev/null
  echo "
A previous $PROG_NAME installation is detected. To run $PROG_NAME use the
following command:

    \$ iex
"
  echo "Req Error: Already installed" >&2
  exit 84
end
# ## Check erlang
if not which erl > /dev/null
  echo "
$PROG_NAME requires Erlang. Please install it with the following command:

    \$ kpm install elixir
"
end
# ## Check erlang version
set -l erlVer (erl -noshell -eval 'io:fwrite("~s\n", [erlang:system_info(otp_release)]).' -s erlang halt)
if test "$erlVer" -lt "17"
  echo "
$PROG_NAME requires at least version 17 of Erlang. Please update Erlang or
reinstall it with the following command:

    \$ kpm install erlang
"
end
# ### User not root
if test "$USERNAME" = "root"
  echo "
$PROG_NAME should not be installed from the root user. Please switch
to your normal Koding user, and try this command again.
"
  echo "Req Error: Not logged in as user" >&2
  exit 84
end
# ### Storage
set -l available_storage (df / | awk 'NR>1{print $4}')
if test (math $available_storage - $REQ_STORAGE) -lt 0
  set -l hReq (math $REQ_STORAGE / 1024)
  set -l hAvl (math $available_storage / 1024)
  echo "
$PROG_NAME requires at least $hReq""MB storage, \
and you have $hAvl""MB free.

Please free up some space, and try again. You can start by deleting any
large files or directories in your home directory or delete software that
you do not need.

You can also upgrade your account to get more space, at the following url:

    https://koding.com/Pricing

Please refer to the following guide for tips on how to free up VM storage:

    http://learn.koding.com/guides/freeing-up-space
"
  echo "Req Error: Not enough storage" >&2
  exit 84
end



# ## Erlang Solutions install (if needed)
# If the user installed Erlang themselves, they might be missing Solutions.
# If that's the case, install it.
if not dpkg -s erlang-solutions > /dev/null
  # ### Download
  curl -L -o "/tmp/$DEBIAN" \
    "http://packages.erlang-solutions.com/$DEBIAN"
  or begin
    set -l err $status
    echo "Error: Failed to download $PROG_NAME"
    echo "Error: Downloading binary from erlang-solutions.com failed" >&2
    exit $err
  end



  # ### Install Deb
  sudo dpkg -i "/tmp/$DEBIAN"
  or begin
    set -l err $status
    echo "Error: Failed to install $PROG_NAME"
    echo "Error: dpki -i failed" >&2
    exit $err
  end



  # ### Cleanup temp file
  sudo rm "/tmp/$DEBIAN"
  or begin
    set -l err $status
    echo "Warning $err: Failed to cleanup temp file"
    echo "Warning $err: Failed to cleanup Deb file in temp dir" >&2
    # Don't exit for warnings
  end
end



# ## Update
# This message is here due to a pause on apt-get update that might
# confuse the user. A vague message will help them know that it isn't
# froze.
echo -e "\nUpdating.."
sudo apt-get update
or begin
  set -l err $status
  echo "Error: Failed to update package list"
  echo "Error: apt-get update failed" >&2
  exit $err
end



# ## Install
sudo apt-get install -y elixir
or begin
  set -l err $status
  echo "Error: Failure installing $PROG_NAME dependencies"
  echo "Error: apt-get failed to install dependencies" >&2
  exit $err
end



# ## Success
echo "
$PROG_NAME installation complete. To run $PROG_NAME use the following
command:

    \$ iex
"
end
main
# vim: set filetype=fish:

